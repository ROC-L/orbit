// Copyright (c) 2020 The Orbit Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package orbit_metrics_uploader;

// This proto is used for communication between Orbit and metrics uploader
// client. Changing this proto requires changing the metrics uploader client
// library accordingly.
message OrbitLogEvent {
  // NextID: 16
  enum LogEventType {
    UNKNOWN_EVENT_TYPE = 0;
    // go/keep-sorted start
    ORBIT_CAPTURE_DURATION = 2;
    ORBIT_CAPTURE_LOAD = 4;
    ORBIT_CAPTURE_SAVE = 3;
    ORBIT_END_SESSION_CLICKED = 13;
    ORBIT_EXIT = 15;
    ORBIT_ITERATOR_ADD = 8;
    ORBIT_ITERATOR_REMOVE = 9;
    ORBIT_MAIN_WINDOW_CLOSE = 14;
    ORBIT_MAIN_WINDOW_OPEN = 1;
    ORBIT_METRICS_UPLOADER_START = 10;
    ORBIT_PRESET_DELETE = 7;
    ORBIT_PRESET_LOAD = 6;
    ORBIT_PRESET_SAVE = 5;
    ORBIT_SESSION_SETUP_WINDOW_CLOSE = 12;
    ORBIT_SESSION_SETUP_WINDOW_OPEN = 11;
    // go/keep-sorted end
  }
  enum StatusCode {
    UNKNOWN_STATUS = 0;

    // The action succeeded.
    SUCCESS = 1;

    // The user explicitly aborted the action via a cancel button.
    CANCELLED = 2;

    // The action failed. This is used for recoverable failures were the user
    // started an action, but Orbit was unable to complete it. This usually
    // means an error message is displayed to the user.
    INTERNAL_ERROR = 3;
  }
  LogEventType log_event_type = 1;

  // OrbitVersion is generated by `git describe --tags --always` command during
  // the build.
  // Format: 1.XX for release version, 1.XX-<suffix> for developer builds.
  string orbit_version = 2;
  // Duration of the log event in milliseconds
  int64 event_duration_milliseconds = 3;
  // Random session identifier
  string session_uuid = 4;
  // Status code of the event
  StatusCode status_code = 5;
}
